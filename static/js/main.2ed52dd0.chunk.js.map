{"version":3,"sources":["logo.svg","components/FraiseGenerator.js","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","objectTypes","verbs","forms","first","secord","third","objectType","objects","text","form","single","type","gender","subjects","sentenceTypes","makePositiveStatement","subject","verb","object","makeGeneralQuestion","makeNegativeStatement","Main","state","fraises","currentFraise","semiStep","firstLanguage","secondLanguage","handleForward","updatedSemiStep","setState","nextQuestion","currentIndex","findIndex","fraise","id","length","prevQuestion","handleBack","sentenceType","forEach","filter","tenseType","tenseTime","English","Russian","push","generateEnglishPresentSimple","console","log","this","Fragment","className","onClick","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ed52dd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const objectTypes = {\n  Pronoun: \"pronoun\",\n  Location: \"location\",\n};\n\nconst verbs = [\n  {\n    forms: {\n      first: \"love\",\n      secord: \"loved\",\n      third: \"loved\",\n    },\n    objectType: objectTypes.Pronoun, \n  },\n  {\n    forms: {\n      first: \"live\",\n      secord: \"lived\",\n      third: \"lived\",     \n    },\n    objectType: objectTypes.Location\n  }  \n]\n\nconst objects = [{\n  text: \"me\",\n  form: 1,\n  single: true,\n  type: objectTypes.Pronoun,\n}, {\n  text: \"her\",\n  form: 3,\n  gender: \"women\",\n  single: true,\n  type: objectTypes.Pronoun,\n}, {\n  text: \"in Kyiv\",\n  type: objectTypes.Location,\n}];\n\nconst subjects = [{\n  text: \"I\",\n  form: 1,\n  single: true,\n}, {\n  text: \"you\",\n  form: 2,\n  single: true,\n}, {\n  text: \"he\",\n  form: 3,\n  single: true,\n}, {\n  text: \"she\",\n  form: 3,\n  single: true,\n}, {\n  text: \"we\",\n  form: 1,\n  single: false,\n}, {\n  text: \"you\",\n  form: 2,\n  single: false,\n}, {\n  text: \"they\",\n  form: 3,\n  single: false,\n}];\n\nconst sentenceTypes = [\n  \"positiveStatement\",\n  \"generalQuestion\",\n  \"negativeStatement\",\n  \"negativeQuestion\",\n];\n\nexport function generateEnglishPresentSimple(\n  // subjects,\n  // verbs,\n  // objects,\n  // sentenceTypes,\n  // tenseTypes,\n  // tenseTimes,\n) {\n  const fraises = [];\n  const sentenceType = sentenceTypes[1];\n  let id = 0;\n  verbs.forEach(verb => {\n    subjects.forEach(subject => {\n      const objectsByType = objects.filter(object => (\n        object.type === verb.objectType\n      ));\n      objectsByType.forEach(object => {\n        const fraise = {\n          id: id++,\n          sentenceType,\n          tenseType: \"simple\",\n          tenseTime: \"present\",\n          English: \"\",\n          Russian: \"\",\n        }\n        if (sentenceType === \"positiveStatement\") {\n          fraise.English = makePositiveStatement(subject, verb, object);          \n          fraise.Russian = \"toRussian: \" + makePositiveStatement(subject, verb, object);          \n        } else if (sentenceType === \"generalQuestion\") {\n          fraise.English = makeGeneralQuestion(subject, verb, object);\n          fraise.Russian = \"toRussian: \" + makeGeneralQuestion(subject, verb, object);\n        } else if (sentenceType === \"negativeStatement\") {\n          fraise.English = makeNegativeStatement(subject, verb, object);\n          fraise.Russian = \"toRussian: \" + makeNegativeStatement(subject, verb, object);\n        }\n        fraises.push(fraise);\n      });\n    });\n  })\n  return fraises;  \n}\n\nfunction makePositiveStatement(subject, verb, object) {\n  if (subject.form === 3 && subject.single) {\n    return `${subject.text} ${verb.forms.first}s ${object.text}`;\n  } else {\n    return `${subject.text} ${verb.forms.first} ${object.text}`;\n  }\n}\n\nfunction makeGeneralQuestion(subject, verb, object) {\n  if (subject.form === 3 && subject.single) {\n    return `Does ${subject.text} ${verb.forms.first} ${object.text}?`;\n  } else {\n    return `Do ${subject.text} ${verb.forms.first} ${object.text}?`;\n  }\n}\n\nfunction makeNegativeStatement(subject, verb, object) {\n  if (subject.form === 3 && subject.single) {\n    return `${subject.text} does not ${verb.forms.first} ${object.text}`;\n  } else {\n    return `${subject.text} do not ${verb.forms.first} ${object.text}`;\n  }\n}","import React from 'react';\nimport { generateEnglishPresentSimple } from \"./FraiseGenerator\";\n\nexport class Main extends React.Component {\n  state = {\n    fraises: [],\n    currentFraise: {},\n    semiStep: false,\n    firstLanguage: \"Russian\",\n    secondLanguage: \"English\",\n  }\n\n  componentDidMount() {\n    // const fraises = [{\n    //   id: 0,\n    //   English: \"I love you.\",\n    //   Russian: \"Я тебя люблю\"\n    // }, {\n    //   id: 1,\n    //   English: \"Do you love me?\",\n    //   Russian: \"Ты меня любишь?\"\n    // }]\n    const fraises = generateEnglishPresentSimple();\n    fraises.forEach(fraise => console.log(\"fraise=\", fraise.English));\n    const currentFraise = fraises[0];\n    this.setState({fraises, currentFraise});\n  }\n  render() {\n    const {\n      semiStep,\n      currentFraise,\n      firstLanguage,\n      secondLanguage,\n     } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <div className=\"fraise\">{currentFraise[firstLanguage]}</div>\n          {semiStep && <div className=\"fraise\">{currentFraise[secondLanguage]}</div>}         \n        </div>\n        <div className=\"navigation\">\n          <button onClick={this.handleBack}>back</button>\n          <button onClick={this.handleForward}>forward</button>\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  handleForward = () => {\n    const { semiStep } = this.state;\n    const updatedSemiStep = !semiStep;\n    if (updatedSemiStep) {\n      this.setState({semiStep: updatedSemiStep});\n    } else {\n      this.nextQuestion();\n    }\n  }\n\n  nextQuestion = () => {\n    const { fraises, currentFraise } = this.state;\n    const currentIndex = fraises.findIndex(fraise => fraise.id === currentFraise.id);\n    if (currentIndex === fraises.length -1) {\n      return;\n    }\n\n    this.setState({\n      currentFraise: fraises[currentIndex + 1],\n      semiStep: false,\n    })\n  }\n\n  prevQuestion = () => {\n    const {fraises, currentFraise} = this.state;\n    const currentIndex = fraises.findIndex(fraise => fraise.id === currentFraise.id);\n    if (currentIndex === 0) {\n      return;\n    }\n    this.setState({\n      currentFraise: fraises[currentIndex - 1],\n      semiStep: true,\n    })    \n  }\n\n  handleBack = () => {\n    const { semiStep } = this.state;\n    const updatedSemiStep = !semiStep;\n    if (!updatedSemiStep) {\n      this.setState({semiStep: updatedSemiStep});\n    } else {\n      this.prevQuestion();\n    }    \n  }  \n}\n","import React from 'react';\n// eslint-disable-next-line\nimport logo from './logo.svg';\nimport './App.css';\nimport { Main } from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Vitaliy Learn React\n        </a>\n      </header> */}\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}